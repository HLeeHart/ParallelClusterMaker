#!/bin/bash
#
################################################################################
# Name:		qsub-hashtest.JOBCOUNT.{{ cluster_name }}.sh
# Author:	Rodney Marable <rodney.marable@gmail.com>
# Created On:	May 4, 2018
# Last Changed:	August 9, 2018
# Deployed On:	{{ lookup('pipe','date \"+%B %-d, %Y\"') }}
# Purpose:	Custom qsub submission script for hashtest.py
################################################################################

# Set the name of the cluster job.
#$ -N job_hashtest

# Set the maximum execution time to 8 hours.
#$ -l h_rt=08:00:00

# Write job standard output and error to the current directory (default).
#$ -cwd

# Merge standard error and output into a single file (default).
#$ -j yes

# Submit as an array job N times. Be mindful of the type of test you have
# defined below on a public cluster so as not to waste resources.
#$ -t 1-JOBCOUNT

# Select a Grid Engine parallel environment and request slots for each job
# submitted to the cluster based on the master_instance_type.
{% if hyperthreading %}# Hyperthreading is enabled.
{% if compute_instance_type.split('.')[-1] == "large" %}#$ -pe smp 2 
{% elif compute_instance_type.split('.')[-1] == "xlarge" %}#$ -pe smp 4
{% elif compute_instance_type.split('.')[-1] == "2xlarge" %}#$ -pe smp 8
{% elif compute_instance_type.split('.')[-1] == "4xlarge" %}#$ -pe smp 16
{% elif compute_instance_type.split('.')[-1] == "9xlarge" %}#$ -pe smp 36
{% elif compute_instance_type.split('.')[-1] == "12xlarge" %}#$ -pe smp 48
{% elif compute_instance_type.split('.')[-1] == "18xlarge" %}#$ -pe smp 72
{% elif compute_instance_type.split('.')[-1] == "24xlarge" %}#$ -pe smp 96
{% else %}##$ -pe smp 4
{% endif %}
{% else %}# Hyperthreading is disabled.
{% if compute_instance_type.split('.')[-1] == "large" %}#$ -pe smp 1
{% elif compute_instance_type.split('.')[-1] == "xlarge" %}#$ -pe smp 2
{% elif compute_instance_type.split('.')[-1] == "2xlarge" %}#$ -pe smp 4
{% elif compute_instance_type.split('.')[-1] == "4xlarge" %}#$ -pe smp 8
{% elif compute_instance_type.split('.')[-1] == "9xlarge" %}#$ -pe smp 18
{% elif compute_instance_type.split('.')[-1] == "12xlarge" %}#$ -pe smp 24
{% elif compute_instance_type.split('.')[-1] == "18xlarge" %}#$ -pe smp 36
{% elif compute_instance_type.split('.')[-1] == "24xlarge" %}#$ -pe smp 48
{% else %}##$ -pe smp 2
{% endif %}
{% endif %}

##########################################################################
##########################################################################
###                      Start the script here                         ### 
##########################################################################
##########################################################################

# Set PYTHON3 to the proper binary.
{% if base_os == 'centos7' %}
PYTHON3=/bin/python3.6
{% else %}
PYTHON3=python3
{% endif %}

# Compute the hashes.

for COUNT in 1000 2000 3000 4000 5000
do
	for SIZE in 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576
	do
		echo "Making $COUNT hashes with input_size = $SIZE bytes @ `date`"
		$PYTHON3 hashtest.py -c $COUNT -S $SIZE -O $JOB_NAME.${JOB_ID}.task${SGE_TASK_ID}.${SIZE}bytes.log -C pigz
		echo "Finished making hashes of input_size = $SIZE bytes @ `date`"
       	 echo ""
	done
done

# Exit successfully.
exit 0
