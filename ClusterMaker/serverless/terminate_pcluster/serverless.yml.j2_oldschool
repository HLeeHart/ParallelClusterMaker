################################################################################
# Name:         serverless.yml
# Author:       Rodney Marable <rodney.marable@gmail.com>
# Created On:   August 20, 2019
# Last Changed: May 22, 2019
# Deployed On:  {{ lookup('pipe','date \"+%B %-d, %Y\"') }}
# Purpose:      Serverless config to support automated self-termination of
# 		pcluster stack {{ cluster_name }}
################################################################################

service: auto-terminate-parallelclustermaker-stacks

provider:
  name: aws
  runtime: python3.7
  memorySize: 256
  timeout: 60
  region: {{ region }}
  stackName: {{ serverless_stack_name }}
  stage: {{ prod_level }}
  tags:
    ClusterID: {{ cluster_name }}
    ClusterOwner: {{ cluster_owner }}
    ClusterOwnerEmail: {{ cluster_owner_email }}
    ClusterOwnerDepartment: {{ cluster_owner_department }}
    ClusterStackType: serverless
    ClusterSerialNumber: {{ cluster_serial_number }}
{% if 'UNDEFINED' not in project_id %}    ProjectID: {{ project_id }}{% endif %}
    ProdLevel: {{ prod_level }}
    DEPLOYMENT_DATE: {{ DEPLOYMENT_DATE }}
    Purpose: 'Auto-terminate cluster stacks built with ParallelClusterMaker'

custom:
  s3ServerlessBucket: {{ s3_serverless_bucket }}
  s3BucketName: {{ s3_bucketname }}

functions:
  terminate-parallelclustermaker-stack:
    handler: {{ serverless_handler }}.handler
    name: {{ serverless_function_name }}
    role: {{ serverless_resource_role }}
    events:
      - schedule:
          rate: {{ cron_lifetime_string }}
          enabled: true

resources:
  Resources:
    S3BucketTerminateClusterStack:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3ServerlessBucket}
    {{ serverless_resource_role }}:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: role-{{ serverless_stack_name }}
        AssumeRolePolicyDocument:
          Version:  '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: policy-{{ serverless_stack_name }}
            PolicyDocument:
              Version:  '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DeleteLogGroup
                    - logs:DeleteLogStream
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:logs:*:*:*"
                - Effect: Allow
                  Action:
                    - s3:HeadBucket
                    - s3:ListBucket
                    - s3:DeleteBucket
                  Resource:
                    - arn:aws:s3:::${self:custom.s3BucketName}
                    - arn:aws:s3:::${self:custom.s3ServerlessBucket}
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:PutObject
                    - s3:DeleteObject
                    - s3:ListObjects
                  Resource:
                    - arn:aws:s3:::${self:custom.s3BucketName}/*
                    - arn:aws:s3:::${self:custom.s3ServerlessBucket}/*
                - Effect: Allow
                  Action:
                    - cloudformation:DescribeStacks
                    - cloudformation:DeleteStack
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:cloudformation:{{ region }}:{{ aws_account_id }}:stack/parallelcluster-{{ cluster_name }}-*/*"
                - Effect: Allow
                  Action:
                    - autoscaling:DeleteAutoScalingGroup
                    - autoscaling:DeleteLaunchConfiguration
                    - autoscaling:DeletePolicy
                    - autoscaling:DescribeAutoScalingInstances
                    - autoscaling:DescribeAutoScalingGroups
                    - autoscaling:DescribeLaunchConfigurations
                    - autoscaling:DescribeScalingActivities
                    - autoscaling:UpdateAutoScalingGroup
                    - autoscaling:TerminateInstanceInAutoScalingGroup
                    - cloudformation:DeleteStack
                    - cloudformation:DescribeStackEvent
                    - cloudformation:DescribeStackResource
                    - cloudformation:DescribeStackResources
                    - cloudformation:DescribeStacks
                    - cloudformation:ListStacks
                    - cloudwatch:DeleteAlarms
                    - codebuild:DeleteProject
                    - dynamodb:DeleteItem
                    - dynamodb:DeleteTable
                    - dynamodb:DescribeTable
                    - ec2:DeleteNetworkInterface
                    - ec2:DeletePlacementGroup
                    - ec2:DeleteSecurityGroup
                    - ec2:DeleteVolume
                    - ec2:DescribeAddresses
                    - ec2:DescribeAvailabilityZone
                    - ec2:DescribeImages
                    - ec2:DescribeInstanceAttribute
                    - ec2:DescribeInstances
                    - ec2:DescribeInstanceStatus
                    - ec2:DescribeKeyPairs
                    - ec2:DescribeNetworkInterfaces
                    - ec2:DescribePlacementGroups
                    - ec2:DescribeSecurityGroups
                    - ec2:DescribeSnapshots
                    - ec2:DescribeSubnets
                    - ec2:DescribeVolumes
                    - ec2:DescribeVpcAttribute
                    - ec2:DescribeVpcs
                    - ec2:DisassociateAddress
                    - ec2:ReleaseAddress
                    - ec2:RevokeSecurityGroupIngress
                    - ec2:TerminateInstances
                    - iam:DeleteRolePolicy
                    - iam:DetachRolePolicy
                    - iam:ListRolePolicies
                    - iam:RemoveRoleFromInstanceProfile
                    - sns:CreateTopic
                    - sns:DeleteTopic
                    - sns:GetTopicAttributes
                    - sns:Publish
                    - sqs:DeleteMessage
                    - sqs:DeleteQueue
                    - sqs:GetQueueAttributes
                    - sqs:SetQueueAttributes
                  Resource:
                    Fn::Join:
                      - ""
                      - - "*"
                - Effect: Allow
                  Action:
                    - iam:ListRoles
                    - iam:ListRolePolicies
                    - iam:DeleteRole
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:iam::{{ aws_account_id }}:role/*"
                - Effect: Allow
                  Action:
                    - iam:DeleteInstanceProfile
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:iam::{{ aws_account_id }}:instance-profile/*"
                - Effect: Allow
                  Action:
                    - ecr:DeleteRepository
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:ecr::{{ aws_account_id }}:repository/para-*"
                - Effect: Allow
                  Action:
                    - lambda:DeleteFunction
                    - lambda:CreateFunction
                    - lambda:GetFunction
                    - lambda:GetFunctionConfiguration
                    - lambda:InvokeFunction
                    - lambda:AddPermission
                    - lambda:RemovePermission
                  Resource:
                    Fn::Join:
                      - ""
                      - - "*"
                - Effect: Allow
                  Action:
                    - batch:*
                  Resource:
                    Fn::Join:
                      - ""
                      - - "*"
